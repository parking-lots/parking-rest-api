group = "parking-rest-api"
buildscript {
    repositories {
        maven { url "http://nexus.qmino.com/content/repositories/miredot" }
        maven { url "http://nexus.qmino.com/content/repositories/miredot-snapshots" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("com.qmino:miredot-plugin:1.6.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'miredot'

apply plugin: GreetingPlugin

greeting.message = 'Hi from Gradle'

class GreetingPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.extensions.create("greeting", GreetingPluginExtension)

        project.task('hello') << {
            println project.greeting.message
        }
    }
}

class GreetingPluginExtension {
    def String message = 'Hello from GreetingPlugin'
}

war {
    baseName = 'parking-api'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile 'org.springframework.boot:spring-boot-starter-web'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'


    compile 'joda-time:joda-time'
    compile 'org.springframework:spring-webmvc:latest.release'
    compile 'org.springframework:spring-web:latest.release'

    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit'
    testCompile 'org.mockito:mockito-core'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

miredot {
    source = sourceSets.main.allJava
    destination = sourceSets.main.output
    output {
        title = 'My Cool Project, version ' + version
        formats {
            'html' {
                baseUrl = 'http://parking.devone.lt/api'
            }
        }
    }
    // enable for spring mvc support
    license = "UHJvamVjdHxwYXJraW5nLXJlc3QtYXBpLnBhcmtpbmctcmVzdC1hcGl8MjAxNi0xMi0xNXx0cnVlI01Dd0NGRk9XYTJPNUNTZzFiVjBKeWF3NXpwWnR0SWxvQWhSZnRuVk9NNzR1MS9NLzZjc3dpREpkZDM5NkR3PT0="
    restModel{
      restFramework{
        name = 'spring-mvc'
      }
    }
}


task wrapper(type:Wrapper){
    gradleVersion = '2.7'
}